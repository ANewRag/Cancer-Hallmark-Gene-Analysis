import os
import shutil

def flatten_directories(source_folder, target_folder):
    # Make sure the target folder exists, if not create it
    if not os.path.exists(target_folder):
        os.makedirs(target_folder)
    
    # Walk through the source folder
    for root, dirs, files in os.walk(source_folder):
        for file in files:
            # Define the full file path in the source folder
            file_path = os.path.join(root, file)
            
            # Define the target path (same filename, but inside target folder)
            target_path = os.path.join(target_folder, file)
            
            # Avoid overwriting if a file with the same name exists in the target folder
            if os.path.exists(target_path):
                base, extension = os.path.splitext(file)
                counter = 1
                # Generate a new unique filename
                while os.path.exists(target_path):
                    new_filename = f"{base}_{counter}{extension}"
                    target_path = os.path.join(target_folder, new_filename)
                    counter += 1
            
            # Move the file to the target folder
            shutil.move(file_path, target_path)
            print(f"Moved: {file_path} -> {target_path}")

# Example Usage
source_folder = "path/to/source"  # Replace with the path to the source folder containing subfolders
target_folder = "path/to/target"  # Replace with the path to the folder where you want all the files

flatten_directories(source_folder, target_folder)
